{"version":3,"sources":["jQuery.js"],"names":["window","$","jQuery","selectorOrArrayOrTemplate","elements","createElement","document","querySelectorAll","Array","string","container","innerHTML","trim","content","firstChild","api","Object","create","prototype","assign","oldApi","fn","constructor","jquery","index","node","Element","each","el","appendChild","e1","get","children","HTMLCollection","i","length","selector","array","elements2","from","concat","call","indexOf","parentNode","push","console","log","className","classList","add"],"mappings":"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","file":"jQuery.a97800b1.map","sourceRoot":"..\\src","sourcesContent":["window.$ = window.jQuery = function (selectorOrArrayOrTemplate) {\r\n  let elements;\r\n  if (typeof selectorOrArrayOrTemplate === \"string\") {\r\n    if (selectorOrArrayOrTemplate[0] === \"<\") {\r\n      //  创建div\r\n      elements = [createElement(selectorOrArrayOrTemplate)];\r\n    } else {\r\n      //  查找 div\r\n      elements = document.querySelectorAll(selectorOrArrayOrTemplate);\r\n    }\r\n  } else if (selectorOrArrayOrTemplate instanceof Array) {\r\n    elements = selectorOrArrayOrTemplate;\r\n  }\r\n\r\n  function createElement(string) {\r\n    const container = document.createElement(\"template\");\r\n    container.innerHTML = string.trim();\r\n    return container.content.firstChild;\r\n  }\r\n  //  api可以操作elements\r\n  const api = Object.create(jQuery.prototype); // 创建一个对象，这个对象的 __proto__ 为括号里面的东西\r\n  // const api = {__proto__: jQuery.prototype}\r\n  Object.assign(api, {\r\n    elements: elements,\r\n    oldApi: selectorOrArrayOrTemplate.oldApi,\r\n  });\r\n  // api.elements = elements\r\n  // api.oldApi = selectorOrArrayOrTemplate.oldApi\r\n  return api;\r\n};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n  constructor: jQuery,\r\n  jquery: true,\r\n  jquery: true,\r\n  get(index) {\r\n    return elements[index];\r\n  },\r\n  appendTo(node) {\r\n    if (node instanceof Element) {\r\n      this.each((el) => node.appendChild(e1)); //  遍历 elements ,对每个el 进行node.appendChild 操作\r\n    } else if (node.jquery === true) {\r\n      this.each((el) => node.get(0).appendChild(el)); //  遍历elements , 对每个 el  进行 node.get(0).appendChild(el) 操作\r\n    }\r\n  },\r\n  append(children) {\r\n    if (children instanceof Element) {\r\n      this.get(0).appendChild(children);\r\n    } else if (children instanceof HTMLCollection) {\r\n      for (let i = 0; i < children.length; i++) {\r\n        this.get(0).appendChild(children[i]);\r\n      }\r\n    } else if (children.jquery === true) {\r\n      children.each((node) => this.get(0).appendChild(node));\r\n    }\r\n  },\r\n  find(selector) {\r\n    let array = [];\r\n    for (let i = 0; i < elements.length; i++) {\r\n      const elements2 = Array.from(elements[i].querySelectorAll(selector));\r\n      array = array.concat(elements2);\r\n    }\r\n    array.oldApi = this; // this就是旧的api\r\n    return jQuery(array);\r\n  },\r\n  end(fn) {\r\n    for (let i = 0; i < elements.length; i++) {\r\n      fn.call(null, elements[i], i);\r\n    }\r\n    return this;\r\n  },\r\n  parent() {\r\n    const array = [];\r\n    this.each((node) => {\r\n      if (array.indexOf(node.parentNode) === -1) {\r\n        array.push(node.parentNode);\r\n      }\r\n    });\r\n    return jQuery(array);\r\n  },\r\n  children() {\r\n    const array = [];\r\n    this.each((node) => {\r\n      array.push(...node.children);\r\n    });\r\n    return jQuery(array);\r\n  },\r\n  print() {\r\n    console.log(elements);\r\n  },\r\n  //  闭包：函数访问外部变量\r\n  addClass(className) {\r\n    for (let i = 0; i < elements.length; i++) {\r\n      elements[i].classList.add(className);\r\n    }\r\n    //  obj.fn(p1)等价于obj.fn.call(obj,p1);//  函数里面的 this 就是 obj\r\n    return this; //  所以 api 可以改成 this\r\n  },\r\n  end() {\r\n    return this.oldApi; // this 就是新的 api\r\n  },\r\n};\r\n"]}